<div class="container has-text-centered">
    <h1 class="title is-1">About</h1>
</div>

<h4 class="subtitle is-3">Chef Registry Datasources</h4>

<div class="content">

    <p>This project is a registry on restaurants and their chefs. A collection of
    meals prepared at the various restaurants is also listed. There will be 3 tables: Chefs,Restaurants and Meals.
    </p>

    <h2>Chef</h2>

        <p>For the Chef's name, age and nationality I used the <strong>Faker Gem</strong><sup><a href="https://github.com/faker-ruby/faker">[1]</a></sup> to generate the data dynamically.
         The Chefs table will store name, age, and nationality of the chefs. This information is generated by the Faker gem. The Faker generators used is:
        </p>

        <ul>
            <li>Faker::Name.name</li>
            <li>Faker::Nation.nationality</li>
            <li>Faker::Number.between(from: 21, to: 65)</li>
        </ul>

        <p>The Datatype of the fields in the Chef's table are:</p>

        <table>
            <thead>
                <tr>
                    <td>Column Name</td>
                <td>Data Type</td>
                <td>Description</td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>ChefID</td>
                    <td>integer</td>
                    <td>Primary Key of the Chef record</td>
                </tr>
                <tr>
                    <td>ChefName</td>
                    <td>string</td>
                    <td>Chef's Name</td>
                </tr>
                <tr>
                    <td>ChefAge</td>
                    <td>string</td>
                    <td>Age of Chef</td>
                </tr>
            </tbody>
        </table>

    <h2>Restaurant</h2>

        <p>The restaurant data was sourced from the <strong>Dinesafe</strong> open dataset<sup><a href="https://open.toronto.ca/dataset/dinesafe/">[2]</a></sup>. Dinesafe is a food safety program that inspects all establishments serving food. I extracted the Name of the restaurant and the location coordinates for the map.

            The API provided has a link to a downloadable CSV file which was stored in the project's db folder. In the db/seed.rb file, the data is read from the file, but only the mentioned columns were taken. It was also filtered by the "Establishment Type" to retrieve strickly restaurants.
        </p>

        <p>
            The Restaurant’s table will the restaurant’s name, cuisine, latitude and longitude. The cuisine field will be generated from the Faker::Food.ethinic_category.
        </p>

        <p>The Datatype of the fields in the restaurant's table are:</p>

        <table>
            <thead>
                <tr>
                    <td>Column Name</td>
                    <td>Data Type</td>
                    <td>Description</td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>RestaurantID</td>
                    <td>integer</td>
                    <td>Primary Key of the restaurant</td>
                </tr>
                <tr>
                    <td>RestaurantName</td>
                    <td>string</td>
                    <td>Restaurant's Name</td>
                </tr>
                <tr>
                    <td>LocationLatitude</td>
                    <td>string</td>
                    <td>Restaurant’s Location Latitude</td>
                </tr>
                <tr>
                    <td>LocationLongitude</td>
                    <td>string</td>
                    <td>Restaurant’s Location longitude</td>
                </tr>
                <tr>
                    <td>Cuisine</td>
                    <td>string</td>
                    <td>Restaurant's style</td>
                </tr>
            </tbody>
        </table>

    <h2>Meal</h2>

        <p>The meal data came from the free API provided by <strong>TheMealDB</strong><sup><a href="https://www.themealdb.com/api.php">[3]</a></sup>. None of the APIs provided a way to directly access <strong>all</strong> meals in all <strong>categories</strong>. So a script was written to read all the meals for each category and then store the results in a csv file. The csv file was then imported into the db folder to be read in the db/seed.rb file.</p>

        <p>The meal's table will be structure:</p>

        <table>
            <thead>
                <tr>
                    <td>Column Name</td>
                    <td>Data Type</td>
                    <td>Description</td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>MealID</td>
                    <td>integer</td>
                    <td>Primary Key of the meal record</td>
                </tr>
                <tr>
                    <td>MealName</td>
                    <td>string</td>
                    <td>Name of meal</td>
                </tr>
                <tr>
                    <td>Image</td>
                    <td>string</td>
                    <td>Url of meal image</td>
                </tr>
            </tbody>
        </table>

</div>